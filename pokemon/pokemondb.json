{
  "_id": "pokemondb",
  "startUrl": ["https://pokemondb.net/pokedex/all"],
  "selectors": [
    {
      "id": "card",
      "type": "SelectorElement",
      "parentSelectors": ["_root"],
      "selector": "tbody tr:lt(470)",
      "multiple": true,
      "delay": 0
    },
    {
      "id": "name_link",
      "type": "SelectorLink",
      "parentSelectors": ["card"],
      "selector": "a.ent-name",
      "multiple": false,
      "delay": 0
    },
    {
      "id": "type",
      "type": "SelectorText",
      "parentSelectors": ["card"],
      "selector": "td.cell-icon",
      "multiple": false,
      "regex": "",
      "delay": 0
    },
    {
      "id": "dex_num",
      "type": "SelectorText",
      "parentSelectors": ["card"],
      "selector": "span.infocard-cell-data",
      "multiple": false,
      "regex": "",
      "delay": 0
    },
    {
      "id": "national_no",
      "type": "SelectorText",
      "parentSelectors": ["name_link"],
      "selector": "tr:contains('National №') td",
      "multiple": false,
      "regex": "",
      "delay": 0
    },
    {
      "id": "ev_yield",
      "type": "SelectorText",
      "parentSelectors": ["name_link"],
      "selector": "tr:contains('EV yield') td",
      "multiple": false,
      "regex": "",
      "delay": 0
    },
    {
      "id": "growth_rate",
      "type": "SelectorText",
      "parentSelectors": ["name_link"],
      "selector": "tr:contains('Growth Rate') td",
      "multiple": false,
      "regex": "",
      "delay": 0
    },
    {
      "id": "catch_rate",
      "type": "SelectorText",
      "parentSelectors": ["name_link"],
      "selector": "tr:contains('Catch rate') td",
      "multiple": false,
      "regex": "",
      "delay": 0
    },
    {
      "id": "base_friendship",
      "type": "SelectorText",
      "parentSelectors": ["name_link"],
      "selector": "tr:contains('Base Friendship') td",
      "multiple": false,
      "regex": "",
      "delay": 0
    },
    {
      "id": "base_exp",
      "type": "SelectorText",
      "parentSelectors": ["name_link"],
      "selector": "tr:contains('Base Exp.') td",
      "multiple": false,
      "regex": "",
      "delay": 0
    },
    {
      "id": "egg_groups",
      "type": "SelectorText",
      "parentSelectors": ["name_link"],
      "selector": "tr:contains('Egg Groups') td",
      "multiple": false,
      "regex": "",
      "delay": 0
    },
    {
      "id": "gender",
      "type": "SelectorText",
      "parentSelectors": ["name_link"],
      "selector": "tr:contains('Gender') td",
      "multiple": false,
      "regex": "",
      "delay": 0
    },
    {
      "id": "egg_cycles",
      "type": "SelectorText",
      "parentSelectors": ["name_link"],
      "selector": "tr:contains('Egg cycles') td",
      "multiple": false,
      "regex": "",
      "delay": 0
    },
    {
      "id": "species",
      "type": "SelectorText",
      "parentSelectors": ["name_link"],
      "selector": "tr:contains('Species') td",
      "multiple": false,
      "regex": "",
      "delay": 0
    },
    {
      "id": "height",
      "type": "SelectorText",
      "parentSelectors": ["name_link"],
      "selector": "tr:contains('Height') td",
      "multiple": false,
      "regex": "",
      "delay": 0
    },
    {
      "id": "abilities",
      "type": "SelectorText",
      "parentSelectors": ["name_link"],
      "selector": "tr:contains('Abilities') td",
      "multiple": false,
      "regex": "",
      "delay": 0
    },
    {
      "id": "local_no",
      "type": "SelectorText",
      "parentSelectors": ["name_link"],
      "selector": "tr:contains('Local №') td",
      "multiple": false,
      "regex": "",
      "delay": 0
    },
    {
      "id": "generation",
      "type": "SelectorLink",
      "parentSelectors": ["name_link"],
      "selector": "li > a[title*='Generation']",
      "multiple": true,
      "delay": 0
    },
    {
      "id": "moves_learnt_by_level_up",
      "type": "SelectorText",
      "parentSelectors": ["generation"],
      "selector": "h3:contains('Moves learnt by level up') + p + div tbody tr",
      "multiple": true,
      "regex": "",
      "delay": 0
    },
    {
      "id": "moves_learnt_by_tm",
      "type": "SelectorText",
      "parentSelectors": ["generation"],
      "selector": "h3:contains('Moves learnt by TM') + p + div tbody tr",
      "multiple": true,
      "regex": "",
      "delay": 0
    },
    {
      "id": "name",
      "type": "SelectorText",
      "parentSelectors": ["card"],
      "selector": "td.cell-name",
      "multiple": false,
      "regex": "",
      "delay": 0
    },
    {
      "id": "moves_learnt_by_tr",
      "type": "SelectorText",
      "parentSelectors": ["generation"],
      "selector": "h3:contains('Moves learnt by TR') + p + div tbody tr",
      "multiple": true,
      "regex": "",
      "delay": 0
    },
    {
      "id": "moves_learnt_by_move_tutor",
      "type": "SelectorText",
      "parentSelectors": ["generation"],
      "selector": "h3:contains('Move Tutor moves') + p + div tbody tr",
      "multiple": true,
      "regex": "",
      "delay": 0
    },
    {
      "id": "moves_learnt_by_egg",
      "type": "SelectorText",
      "parentSelectors": ["generation"],
      "selector": "h3:contains('Egg moves') + p + div tbody tr",
      "multiple": true,
      "regex": "",
      "delay": 0
    },
    {
      "id": "moves_learnt_by_hm",
      "type": "SelectorText",
      "parentSelectors": ["generation"],
      "selector": "h3:contains('Moves learnt by HM') + p + div tbody tr",
      "multiple": true,
      "regex": "",
      "delay": 0
    },
    {
      "id": "moves_learnt_by_transfer",
      "type": "SelectorText",
      "parentSelectors": ["generation"],
      "selector": "h3:contains('Transfer-only moves') + p + div tbody tr",
      "multiple": true,
      "regex": "",
      "delay": 0
    },
    {
      "id": "moves_learnt_by_evolution",
      "type": "SelectorText",
      "parentSelectors": ["generation"],
      "selector": "h3:contains('Moves learnt on evolution') + p + div tbody tr",
      "multiple": true,
      "regex": "",
      "delay": 0
    }
  ]
}
